Environment Variables
-----------------------
Environment variables are simply named quantities that have specific 
values and are understood by the command shell, such as bash. Some of
these are pre-set (built-in) by the system, and others are set by the 
user either at the command line or within startup and other scripts.
An environment variable is actually no more than a character string 
that contains information used by one or more applications. 

There are a number of ways to view the values of currently set environment
variables; one can type set, env, or export. 
Depending on the state of your system, set may print out many more lines than the other two methods.

$ set
$ env 
$ export


----------------------------------------------------

The PATH Variable
---------------------

PATH is an ordered list of directories (the path) which is scanned when a 
command is given to find the appropriate program or script to run. 
Each directory in the path is separated by colons (:). 

>> A null (empty) directory name (or ./) indicates the current directory at any given time.

> :path1:path2
> path1::path2
	
	In the example :path1:path2, there is null directory before the first colon (:).
	For path1::path2 there is null directory between path1 and path2. 

To prefix a private bin directory to your path:

$ export PATH=$HOME/bin:$PATH
$ echo $PATH
/home/me/bin:/usr/local/bin:/usr/bin:/bin/usr


The PS1 Variable
-----------------------

Prompt Statement (PS) is used to customize your prompt string
in your terminal windows to display the information you want. 

PS1 is the primary prompt variable which controls what your
command line prompt looks like. The following special characters can be included in PS1 :

	\u - User name 
	\h - Host name 
	\w - Current working directory 
	\! - History number of this command 
	\d - Date

They must be surrounded in single quotes when they are used as in the following example:
$ echo $PS1
$
$ export PS1='\u@\h:\w$ '
me@example.com:~$ # new prompt
me@example.com:~$

To revert the changes:
me@example.com:~$ export PS1='$ '
$

Even better practice would be to save the old prompt first and then restore, as in:
$ OLD_PS1=$PS1

change the prompt, and eventually change it back with:
$ PS1=$OLD_PS1
$


The SHELL Variable
-----------------------

The environment variable SHELL points to the user's default command shell
(the program that is handling whatever you type in a command window, usually bash)
 and contains the full pathname to the shell:

$ echo $SHELL
/bin/bash
$


